import "./App.css";
import axios from "axios";
import React, { useEffect } from "react";
import logo from "./logo.jpeg";

function App() {
  const [responseId, setResponseId] = React.useState("");
  const [responseState, setResponseState] = React.useState([]);

  const loadScript = (src) => {
    return new Promise((resolve) => {
      const script = document.createElement("script");

      script.src = src;

      script.onload = () => {
        resolve(true);
      };
      script.onerror = () => {
        resolve(false);
      };

      document.body.appendChild(script);
    });
  };

  // const createRazorpayOrder = (amount) => {
  //   let data = JSON.stringify({
  //     amount: amount * 100,
  //     currency: "INR",
  //   });

  //   let config = {
  //     method: "post",
  //     maxBodyLength: Infinity,
  //     url: "http://localhost:5000/orders",
  //     headers: {
  //       "Content-Type": "application/json",
  //     },
  //     data: data,
  //   };

  //   axios
  //     .request(config)
  //     .then((response) => {
  //       console.log(JSON.stringify(response.data));
  //       handleRazorpayScreen(response.data.amount);
  //     })
  //     .catch((error) => {
  //       console.log("error at", error);
  //     });
  // };

  const handleRazorpayScreen = async () => {
    const res = await loadScript("https:/checkout.razorpay.com/v1/checkout.js");

    if (!res) {
      alert("Some error at razorpay screen loading");
      return;
    }

    const options = {
      key: "rzp_live_mrweB6v6mx5SSc",
      amount: 100,
      currency: "INR",
      name: "Institute",
      description: "payment to Institute",
      image: logo,
      handler: function (response) {
        setResponseId(response.razorpay_payment_id);
      },
      prefill: {
        name: "IjajAhmed Akram Jaman",
        email: "ijaj.jaman08@gmail.com",
      },
      theme: {
        color: "#F4C430",
      },
    };

    if (typeof window.Razorpay !== "undefined") {
      const paymentObject = new window.Razorpay(options);
      paymentObject.open();
    } else {
      console.error("Razorpay script not loaded yet!");
    }
  };

  // const paymentFetch = (e) => {
  //   e.preventDefault();

  //   const paymentId = e.target.paymentId.value;

  //   axios
  //     .get(`http://localhost:5000/payment/${paymentId}`)
  //     .then((response) => {
  //       console.log(response.data);
  //       setResponseState(response.data);
  //     })
  //     .catch((error) => {
  //       console.log("error occures", error);
  //     });
  // };

  // useEffect(() => {
  //   let data = JSON.stringify({
  //     amount: amount * 100,
  //   })

  //   let config = {
  //     method: "post",
  //     maxBodyLength: Infinity,
  //     url: `http://localhost:5000/capture/${responseId}`,
  //     headers: {
  //       'Content-Type': 'application/json'
  //     },
  //     data: data
  //   }

  //   axios.request(config)
  //   .then((response) => {
  //     console.log(JSON.stringify(response.data))
  //   })
  //   .catch((error) => {
  //     console.log("error at", error)
  //   })
  // }, [responseId])

  return (
    <div className="App container">
      <header>
        <img src={logo} alt="AIYSRA Logo" />
        <h1>рдСрд▓ рдЗрдВрдбрд┐рдпрд╛ рдпрдВрдЧ рд╕рд╛рдпрдВрдЯрд┐рд╕реНрдЯ рд░рд┐рд╕рд░реНрдЪ рдЕрд╕реЛрд╕рд┐рдПрд╢рди</h1>
        <h1></h1>
      </header>

      <div className="content">
        <div className="card">
          <h2>рджрд╣рд╛рд╡реА рдЭрд╛рд▓реА? рдХрд░рд┐рдпрд░ рдмрд╛рдмрдд рд╕рдВрднреНрд░рдорд╛рдд рдЖрд╣рд╛рдд рдХрд╛? ЁЯдФ</h2>
          <p>
            рддреБрдордЪреЗ рд╕реНрд╡рдкреНрди рдбреЙрдХреНрдЯрд░, рдЗрдВрдЬрд┐рдирд┐рдпрд░ JEE, NEET, рдкреЛрд▓рд┐рд╕, рдкреНрд░рд╢рд╛рд╕рдХреАрдп рдЕрдзрд┐рдХрд╛рд░реА,
            рдЖрд░реНрдореА, рдиреЗрд╡реНрд╣реА, рдПрдЕрд░рдлреЛрд░реНрд╕ рдпрд╛рд╡рд┐рд╖рдпреАрдЪреА рдорд╛рд╣рд┐рддреА AIYSRA рдорд╛рд░реНрдлрдд рдЕрдЧрджреА рдореЛрдлрдд...
          </p>
          <p>
            рдЖрдордЪреНрдпрд╛ рез рдорд╣рд┐рдиреНрдпрд╛рдЪреНрдпрд╛ рдХрд░рд┐рдЕрд░ рдорд╛рд░реНрдЧрджрд░реНрд╢рди рдХреЛрд░реНрд╕рдордзреНрдпреЗ рд╕рд╣рднрд╛рдЧреА рд╡реНрд╣рд╛ ЁЯЪА рдЖрдгрд┐
          </p>
          <ul
            style={{
              textAlign: "left",
              listStyle: "none",
              padding: 0,
              margin: 0,
            }}
          >
            <li>тЬЕ рд╡рд┐рд╡рд┐рдз рдХреНрд╖реЗрддреНрд░рд╛рддреАрд▓ рддрдЬреНрдЮ, рдЕрдиреБрднрд╡реА рд╢рд┐рдХреНрд╖рдХрд╛рдВрдЪреЗ рдорд╛рд░реНрдЧрджрд░реНрд╢рди.</li>
            <li>тЬЕ рджрд╣рд╛рд╡реАрдирдВрддрд░ рдпреЛрдЧреНрдп рд╡рд┐рд╖рдп рдХрд╕реЗ рдирд┐рд╡рдбрд╛рдпрдЪреЗ рдпрд╛рдмрд╛рдмрдд рд╕рдЦреЛрд▓ рдорд╛рд╣рд┐рддреА.</li>
            <li>тЬЕ рддреБрдордЪреЗ рд╕реНрд╡рдкреНрдирд╛рддреАрд▓ рдХрд░рд┐рдЕрд░ рд╕рд╛рдзреНрдп рдХрд░рдгреНрдпрд╛рдЪрд╛ рд░реЛрдбрдореЕрдк!</li>
            <li>
              тЬЕ рдкреНрд░рд╡реЗрд╢рд╛ рд╕рдВрдмрдВрдзрд┐рдд рдХрд╛рдЧрджрдкрддреНрд░рд╛рдВрдЪреА рдорд╛рд╣рд┐рддреА, рдкреНрд░рд╡реЗрд╢ рдЖрд░рдХреНрд╖рдг рдорд╛рд╣рд┐рддреА.
            </li>
            <li>тЬЕ рд╢рд╛рд╕рдХреАрдп рдорд╣рд╛рд╡рд┐рджреНрдпрд╛рд▓рдпрд╛рдВрдЪреА рдорд╛рд╣рд┐рддреА.</li>
            <li>тЬЕ рд╢реИрдХреНрд╖рдгрд┐рдХ рдЦрд░реНрдЪ рд╡ рд╕реНрдХреЙрд▓рд░рд╢рд┐рдк.</li>
            <li>
              тЬЕ рдПрдирдбреАрдП (рдЖрд░реНрдореА, рдиреЗрд╡реНрд╣реА, рдПрдЕрд░рдлреЛрд░реНрд╕) CET, JEE, NEET рдЪреА рдорд╛рд╣рд┐рддреА.
            </li>
            <li>тЬЕ рднрд░рддреАрдкреВрд░реНрд╡ рдкреНрд░рд╢рд┐рдХреНрд╖рдг (рдкреЛрд▓реАрд╕ рднрд░рддреА).</li>
          </ul>
          <p>
            <strong>рдорд░реНрдпрд╛рджрд┐рдд рдкреНрд░рд╡реЗрд╢:</strong> рдлрдХреНрдд релреж рд╡рд┐рджреНрдпрд╛рд░реНрдереНрдпрд╛рдВрд╕рд╛рдареА!
          </p>
          <p>рд╣реА рд╕реБрд╡рд░реНрдгрд╕рдВрдзреА рдореЛрдлрдд рддреБрдордЪреНрдпрд╛рд╕рд╛рдареА рдЙрдкрд▓рдмреНрдз рдЖрд╣реЗ!</p>
          <p>рддреБрдордЪреНрдпрд╛ рдпрд╢рд╕реНрд╡реА рднрд╡рд┐рд╖реНрдпрд╛рд╕рд╛рдареА рдкрд╣рд┐рд▓рдВ рдкрд╛рдКрд▓ рдЖрдореНрд╣реА рдШреНрдпрд╛рдпрд▓рд╛ рдорджрдд рдХрд░реВ. ЁЯТб</p>
          <a className="button" onClick={() => handleRazorpayScreen()}>
            рдЖрдЬрдЪ рдирд╛рд╡ рдмреБрдХ рдХрд░рд╛
          </a>
        </div>
      </div>
      {/* <button onClick={() => handleRazorpayScreen()}>Payment of 100Rs.</button> */}
      {/* {responseId && <p>{responseId}</p>}
      <h1>This is payment verification form</h1>
      <form onSubmit={paymentFetch}>
        <input type="text" name="paymentId" />
        <button type="submit">Fetch Payment</button>
        {responseState.length !== 0 && (
          <ul>
            <li>Amount: {responseState.amount / 100} Rs.</li>
            <li>Currency: {responseState.currency}</li>
            <li>Status: {responseState.status}</li>
            <li>Method: {responseState.method}</li>
          </ul>
        )}
      </form> */}
    </div>
  );
}

export default App;
